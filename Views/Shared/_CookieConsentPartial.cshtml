@using manyasligida.Services.Interfaces
@inject ICookieConsentService CookieConsentService
@{
    var sessionConsent = Context.Session.GetString("CookieConsent") == "true";
    var cookieConsent = Context.Request.Cookies["CookieConsent"] == "true";
    
    // Database kontrolü - gerçek cookie consent durumu
    var sessionId = Context.Session.Id;
    var dbConsentTask = CookieConsentService.GetConsentStatusAsync(sessionId);
    var dbConsentResult = dbConsentTask.GetAwaiter().GetResult();
    var hasDbConsent = dbConsentResult.Success && dbConsentResult.Data != null && dbConsentResult.Data.HasConsent;
    
    // Cookie consent kontrolü: Session OR Cookie OR Database (en güçlü check)
    var hasConsented = sessionConsent || cookieConsent || hasDbConsent;
}

@if (!hasConsented)
{
    <div id="cookieConsentBanner" class="cookie-consent-banner">
        <div class="cookie-consent-content">
            <div class="cookie-consent-header">
                <h5><i class="fas fa-cookie-bite me-2"></i>Cookie Tercihleri</h5>
                <p class="mb-3">Bu web sitesi deneyiminizi geliştirmek için çerezler kullanır.</p>
            </div>
            
            <div class="cookie-consent-actions">
                <button type="button" class="btn btn-outline-secondary btn-sm" id="detailsBtn">
                    <i class="fas fa-cog me-1"></i>Detaylar
                </button>
                <button type="button" class="btn btn-success btn-sm" id="acceptAllBtn">
                    <i class="fas fa-check me-1"></i>Tümünü Kabul Et (1 Yıl)
                </button>
                <button type="button" class="btn btn-primary btn-sm" id="saveBtn">
                    <i class="fas fa-save me-1"></i>Tercihleri Kaydet
                </button>
            </div>
        </div>
    </div>

    <!-- Cookie Modal -->
    <div id="cookieModal" class="cookie-modal">
        <div class="cookie-modal-content">
            <div class="cookie-modal-header">
                <h4><i class="fas fa-cookie-bite me-2"></i>Cookie Tercihleri</h4>
                <p>Hangi çerezleri kabul etmek istediğinizi seçin</p>
            </div>
            
            <div class="cookie-modal-body">
                <div class="cookie-category-item">
                    <div class="cookie-category-header">
                        <span class="cookie-category-title">Gerekli Çerezler</span>
                        <label class="cookie-category-toggle">
                            <input type="checkbox" id="required-cookies" checked disabled>
                            <span class="cookie-category-slider"></span>
                        </label>
                    </div>
                    <div class="cookie-category-description">
                        Sitenin temel işlevselliği için gerekli olan çerezler. Bu çerezler olmadan site düzgün çalışmaz.
                    </div>
                </div>
                
                <div class="cookie-category-item">
                    <div class="cookie-category-header">
                        <span class="cookie-category-title">Analitik Çerezler</span>
                        <label class="cookie-category-toggle">
                            <input type="checkbox" id="analytics-cookies">
                            <span class="cookie-category-slider"></span>
                        </label>
                    </div>
                    <div class="cookie-category-description">
                        Sitenin kullanımını analiz etmek ve performansını iyileştirmek için kullanılan çerezler. Google Analytics gibi araçlar kullanır.
                    </div>
                </div>
                
                <div class="cookie-category-item">
                    <div class="cookie-category-header">
                        <span class="cookie-category-title">Pazarlama Çerezleri</span>
                        <label class="cookie-category-toggle">
                            <input type="checkbox" id="marketing-cookies">
                            <span class="cookie-category-slider"></span>
                        </label>
                    </div>
                    <div class="cookie-category-description">
                        Size kişiselleştirilmiş reklamlar göstermek için kullanılan çerezler. Reklam ağları tarafından kullanılır.
                    </div>
                </div>
                
                <div class="cookie-category-item">
                    <div class="cookie-category-header">
                        <span class="cookie-category-title">Sosyal Medya Çerezleri</span>
                        <label class="cookie-category-toggle">
                            <input type="checkbox" id="social-cookies">
                            <span class="cookie-category-slider"></span>
                        </label>
                    </div>
                    <div class="cookie-category-description">
                        Sosyal medya platformları ile etkileşim için kullanılan çerezler. Facebook, Twitter gibi platformlar için.
                    </div>
                </div>
            </div>
            
            <div class="cookie-modal-footer">
                <button type="button" class="btn btn-outline-secondary" onclick="closeCookieModal()">
                    <i class="fas fa-times me-1"></i>İptal
                </button>
                <button type="button" class="btn btn-primary" onclick="saveCookiePreferencesFromModal()">
                    <i class="fas fa-save me-1"></i>Tercihleri Kaydet
                </button>
            </div>
        </div>
    </div>

    <style>
        .cookie-consent-banner {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            background: linear-gradient(135deg, #0F172A 0%, #1E293B 100%);
            color: white;
            padding: 20px;
            box-shadow: 0 -4px 20px rgba(0,0,0,0.15);
            z-index: 9999;
            border-top: 3px solid #F59E0B;
        }

        .cookie-consent-content {
            max-width: 1200px;
            margin: 0 auto;
        }

        .cookie-consent-header h5 {
            color: #F59E0B;
            margin-bottom: 10px;
            font-weight: 700;
            font-size: 1.25rem;
        }

        .cookie-consent-header p {
            color: rgba(255,255,255,0.9);
            line-height: 1.6;
        }

        .cookie-consent-actions {
            display: flex;
            gap: 12px;
            flex-wrap: wrap;
            justify-content: flex-end;
            margin-top: 20px;
        }

        .cookie-consent-actions .btn {
            border-radius: 8px;
            font-weight: 600;
            padding: 10px 20px;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.85rem;
        }

        .cookie-consent-actions .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .cookie-consent-actions .btn-outline-secondary {
            border-color: rgba(255,255,255,0.3);
            color: rgba(255,255,255,0.8);
        }

        .cookie-consent-actions .btn-outline-secondary:hover {
            background-color: rgba(255,255,255,0.1);
            border-color: rgba(255,255,255,0.5);
            color: white;
        }

        .cookie-consent-actions .btn-outline-primary {
            border-color: #F59E0B;
            color: #F59E0B;
        }

        .cookie-consent-actions .btn-outline-primary:hover {
            background-color: #F59E0B;
            border-color: #F59E0B;
            color: white;
        }

        .cookie-consent-actions .btn-primary {
            background: linear-gradient(135deg, #F59E0B 0%, #FBBF24 100%);
            border-color: #F59E0B;
            color: white;
        }

        .cookie-consent-actions .btn-primary:hover {
            background: linear-gradient(135deg, #FBBF24 0%, #F59E0B 100%);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(245, 158, 11, 0.4);
        }

        /* Animation for banner appearance */
        .cookie-consent-banner {
            animation: slideUp 0.5s ease-out;
        }

        @@keyframes slideUp {
            from {
                transform: translateY(100%);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        /* Responsive design */
        @@media (max-width: 768px) {
            .cookie-consent-banner {
                padding: 15px;
            }
            
            .cookie-consent-actions {
                justify-content: center;
                gap: 8px;
            }
            
            .cookie-consent-actions .btn {
                flex: 1;
                min-width: 120px;
                font-size: 0.8rem;
                padding: 8px 16px;
            }
        }

        @@media (max-width: 576px) {
            .cookie-consent-banner {
                padding: 12px;
            }

            .cookie-consent-actions {
                flex-direction: column;
            }

            .cookie-consent-actions .btn {
                width: 100%;
                margin-bottom: 8px;
            }
        }

        /* Cookie Modal Styles */
        .cookie-modal {
            display: none;
            position: fixed;
            z-index: 10000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.8);
            backdrop-filter: blur(5px);
        }

        .cookie-modal-content {
            background: linear-gradient(135deg, #0F172A 0%, #1E293B 100%);
            margin: 5% auto;
            padding: 30px;
            border-radius: 15px;
            width: 90%;
            max-width: 600px;
            color: white;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            border: 2px solid #F59E0B;
            animation: modalSlideIn 0.3s ease-out;
        }

        @@keyframes modalSlideIn {
            from {
                transform: translateY(-50px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .cookie-modal-header {
            text-align: center;
            margin-bottom: 25px;
        }

        .cookie-modal-header h4 {
            color: #F59E0B;
            font-weight: 700;
            font-size: 1.5rem;
            margin-bottom: 10px;
        }

        .cookie-modal-body {
            margin-bottom: 25px;
            max-height: 60vh;
            overflow-y: auto;
            padding-right: 10px;
        }

        /* Scrollbar styling for modal */
        .cookie-modal-body::-webkit-scrollbar {
            width: 8px;
        }

        .cookie-modal-body::-webkit-scrollbar-track {
            background: rgba(255,255,255,0.1);
            border-radius: 4px;
        }

        .cookie-modal-body::-webkit-scrollbar-thumb {
            background: rgba(245, 158, 11, 0.6);
            border-radius: 4px;
        }

        .cookie-modal-body::-webkit-scrollbar-thumb:hover {
            background: rgba(245, 158, 11, 0.8);
        }

        .cookie-category-item {
            background: rgba(255,255,255,0.1);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
            border: 1px solid rgba(255,255,255,0.2);
            transition: all 0.3s ease;
        }

        .cookie-category-item:hover {
            background: rgba(255,255,255,0.15);
            transform: translateY(-2px);
        }

        .cookie-category-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .cookie-category-title {
            font-weight: 600;
            color: #F59E0B;
            font-size: 1.1rem;
        }

        .cookie-category-toggle {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 24px;
        }

        .cookie-category-toggle input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .cookie-category-slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(255,255,255,0.3);
            transition: .4s;
            border-radius: 24px;
        }

        .cookie-category-slider:before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .cookie-category-slider {
            background-color: #F59E0B;
        }

        input:checked + .cookie-category-slider:before {
            transform: translateX(26px);
        }

        .cookie-category-description {
            color: rgba(255,255,255,0.8);
            font-size: 0.9rem;
            line-height: 1.5;
        }

        .cookie-modal-footer {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
        }

        .cookie-modal-footer .btn {
            border-radius: 8px;
            font-weight: 600;
            padding: 12px 25px;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.9rem;
        }

        .cookie-modal-footer .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        .cookie-modal-footer .btn-outline-secondary {
            border-color: rgba(255,255,255,0.3);
            color: rgba(255,255,255,0.8);
        }

        .cookie-modal-footer .btn-outline-secondary:hover {
            background-color: rgba(255,255,255,0.1);
            border-color: rgba(255,255,255,0.5);
            color: white;
        }

        .cookie-modal-footer .btn-primary {
            background: linear-gradient(135deg, #F59E0B 0%, #FBBF24 100%);
            border-color: #F59E0B;
            color: white;
        }

        .cookie-modal-footer .btn-primary:hover {
            background: linear-gradient(135deg, #FBBF24 0%, #F59E0B 100%);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(245, 158, 11, 0.4);
        }

        /* Responsive modal */
        @@media (max-width: 768px) {
            .cookie-modal-content {
                margin: 5% auto;
                padding: 20px;
                width: 95%;
                max-height: 90vh;
            }
            
            .cookie-modal-body {
                max-height: 50vh;
                overflow-y: auto;
            }
            
            .cookie-modal-footer {
                flex-direction: column;
                gap: 10px;
            }
            
            .cookie-modal-footer .btn {
                width: 100%;
            }
        }

        /* Touch-friendly scroll for mobile */
        @@media (max-width: 768px) {
            .cookie-modal-body {
                -webkit-overflow-scrolling: touch;
                scroll-behavior: smooth;
            }
        }
    </style>

    <script>
        // Wait for DOM to load
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Cookie consent script loaded');
            
            // Check localStorage first (client-side persistence check)
            const localConsent = localStorage.getItem('CookieConsent');
            const localExpiry = localStorage.getItem('CookieConsentExpiry');
            
            if (localConsent === 'true' && localExpiry) {
                const expiryTime = parseInt(localExpiry);
                const now = new Date().getTime();
                
                if (now < expiryTime) {
                    console.log('🍪 Found valid localStorage consent, hiding banner');
                    hideCookieBanner();
                    return; // No need to show banner
                } else {
                    console.log('🍪 localStorage consent expired, clearing');
                    localStorage.removeItem('CookieConsent');
                    localStorage.removeItem('CookieConsentExpiry');
                }
            }
            
            // Get buttons
            const detailsBtn = document.getElementById('detailsBtn');
            const acceptAllBtn = document.getElementById('acceptAllBtn');
            const saveBtn = document.getElementById('saveBtn');
            
            // Add event listeners
            if (detailsBtn) {
                detailsBtn.addEventListener('click', function() {
                    showCookieModal();
                });
            }
            
            if (acceptAllBtn) {
                acceptAllBtn.addEventListener('click', function() {
                    acceptAllCookiesDirectly();
                });
            }
            
            if (saveBtn) {
                saveBtn.addEventListener('click', function() {
                    showCookieModal();
                });
            }
        });
        
        // Show cookie modal
        function showCookieModal() {
            const modal = document.getElementById('cookieModal');
            if (modal) {
                modal.style.display = 'block';
                // Disable body scroll
                document.body.style.overflow = 'hidden';
            }
        }
        
        // Close cookie modal
        function closeCookieModal() {
            const modal = document.getElementById('cookieModal');
            if (modal) {
                modal.style.display = 'none';
                // Enable body scroll
                document.body.style.overflow = 'auto';
            }
        }
        
        // Hide cookie banner
        function hideCookieBanner() {
            const banner = document.getElementById('cookieConsentBanner');
            if (banner) {
                banner.style.display = 'none';
            }
        }

        // Save cookie preferences from modal
        function saveCookiePreferencesFromModal() {
            console.log('saveCookiePreferencesFromModal called');
            
            // Get selected preferences
            const analytics = document.getElementById('analytics-cookies').checked;
            const marketing = document.getElementById('marketing-cookies').checked;
            const social = document.getElementById('social-cookies').checked;
            
            console.log('Selected preferences:', { analytics, marketing, social });
            
            // Simple AJAX call
            fetch('/CookieConsent/SimpleSave', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    analytics: analytics,
                    marketing: marketing,
                    social: social
                })
            })
            .then(response => {
                console.log('Response received:', response);
                return response.json();
            })
            .then(data => {
                console.log('Data received:', data);
                if (data.success) {
                    // Set persistent cookie consent
                    setCookieConsent(true);
                    
                    closeCookieModal();
                    hideCookieBanner();
                    
                    // Block Google Analytics if analytics is not selected
                    if (!analytics) {
                        blockGoogleAnalytics();
                    }
                } else {
                    console.error('Error:', data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Cookie tercihleri kaydedilemedi.');
            });
        }

        // Accept all cookies directly (like Google, Facebook does)
        function acceptAllCookiesDirectly() {
            console.log('🍪 ACCEPT ALL - Directly accepting all cookies...');
            
            // IMMEDIATELY set persistent cookie (1 year)
            setCookieConsent(true);
            
            // Hide banner immediately
            hideCookieBanner();
            
            // Show success message
            showToast('🍪 Tüm çerezler kabul edildi! (1 yıl boyunca hatırlanacak)', 'success');
            
            // Send to server in background
            const preferences = {
                necessary: true,
                functional: true,
                analytics: true,
                marketing: true
            };
            
            fetch('/CookieConsent/SimpleSave', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                body: JSON.stringify(preferences)
            })
            .then(response => response.json())
            .then(data => {
                console.log('✅ Background cookie save result:', data);
            })
            .catch(error => {
                console.warn('⚠️ Background cookie save failed (but cookie is already set):', error);
            });
        }

        // Set cookie consent with 1 year expiration
        function setCookieConsent(value) {
            const expires = new Date();
            expires.setFullYear(expires.getFullYear() + 1); // 1 year
            document.cookie = `CookieConsent=${value}; expires=${expires.toUTCString()}; path=/; SameSite=Lax`;
            
            // Triple backup: Session + Local Storage + Cookie
            sessionStorage.setItem('CookieConsent', value.toString());
            localStorage.setItem('CookieConsent', value.toString());
            localStorage.setItem('CookieConsentExpiry', expires.getTime().toString());
            
            console.log('🍪 Persistent cookie set for 1 year:', value);
            console.log('📅 Cookie expires:', expires.toLocaleString());
        }

        // Block Google Analytics
        function blockGoogleAnalytics() {
            console.log('Blocking Google Analytics...');
            
            // Block gtag
            window.gtag = function() {
                console.log('Google Analytics blocked');
            };
            
            // Block ga
            window.ga = function() {
                console.log('Google Analytics blocked');
            };
            
            // Block _gaq
            window._gaq = {
                push: function() {
                    console.log('Google Analytics blocked');
                }
            };
            
            // Remove existing Google Analytics scripts
            const scripts = document.querySelectorAll('script[src*="google-analytics"], script[src*="googletagmanager"], script[src*="gtag"]');
            scripts.forEach(script => {
                script.remove();
            });
            
            console.log('Google Analytics blocked successfully');
        }

        // Save cookie preferences (SUPER SIMPLE VERSION) - for backward compatibility
        function saveCookiePreferences() {
            showCookieModal();
        }
    </script>
} 