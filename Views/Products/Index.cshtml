@model IEnumerable<manyasligida.Models.Product>
@{
    ViewData["Title"] = "Ürünlerimiz - Manyaslı Gıda";
}

<!-- Page Header -->
<section class="page-header" style="background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%); padding: 120px 0 80px;">
    <div class="container">
        <div class="row justify-content-center text-center">
            <div class="col-lg-8" data-aos="fade-up">
                <h1 class="text-white fw-bold mb-3">Ürünlerimiz</h1>
                <p class="text-white lead">Manyas'ın bereketli topraklarından sofralarınıza uzanan doğal lezzetler</p>
            </div>
        </div>
    </div>
</section>

<!-- Search and Filter Section -->
<section class="section-padding bg-light">
    <div class="container">
        <div class="row">
            <!-- Search Bar -->
            <div class="col-lg-6 mb-4">
                <form method="get" action="@Url.Action("Search", "Products")" class="search-form">
                    <div class="input-group">
                        <input type="text" name="q" class="form-control form-control-lg" placeholder="Ürün ara..." value="@ViewBag.SearchTerm">
                        <button class="btn btn-primary btn-lg" type="submit">
                            <i class="fas fa-search me-2"></i>Ara
                        </button>
                    </div>
                </form>
            </div>
            
            <!-- Sort Options -->
            <div class="col-lg-6 mb-4">
                <select class="form-select form-select-lg" id="sortSelect" onchange="changeSort(this.value)">
                    <option value="name">İsme Göre</option>
                    <option value="price">Fiyat (Düşük-Yüksek)</option>
                    <option value="price_desc">Fiyat (Yüksek-Düşük)</option>
                    <option value="new">En Yeni</option>
                    <option value="popular">Popüler</option>
                </select>
            </div>
        </div>

        <!-- Category Filter -->
        <div class="row">
            <div class="col-12">
                <div class="filter-section text-center" data-aos="fade-up">
                    <div class="btn-group" role="group">
                        <a href="@Url.Action("Index", "Products")" class="btn @(ViewBag.SelectedCategoryId == null ? "btn-primary" : "btn-outline-primary") btn-lg">
                            <i class="fas fa-th-large me-2"></i>Tümü
                        </a>
                        @foreach (var category in ViewBag.Categories)
                        {
                            <a href="@Url.Action("Index", "Products", new { categoryId = category.Id })" 
                               class="btn @(ViewBag.SelectedCategoryId == category.Id ? "btn-primary" : "btn-outline-primary") btn-lg">
                                @category.Name
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Products Section -->
<section class="section-padding">
    <div class="container">
        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <div class="mb-4">
                    <i class="fas fa-search fa-4x text-muted"></i>
                </div>
                <h3 class="mb-3">Aradığınız kriterlere uygun ürün bulunamadı</h3>
                <p class="text-muted mb-4">Farklı arama kriterleri deneyebilir veya tüm ürünlerimize göz atabilirsiniz.</p>
                <a href="@Url.Action("Index", "Products")" class="btn btn-primary btn-lg">
                    <i class="fas fa-th-large me-2"></i>Tüm Ürünleri Gör
                </a>
            </div>
        }
        else
        {
            <!-- Products Grid -->
            <div class="row g-4">
                @foreach (var product in Model)
                {
                    <div class="col-lg-3 col-md-6" data-aos="fade-up" data-aos-delay="@(100 * (Model.ToList().IndexOf(product) + 1))">
                        <div class="card product-card h-100 border-0 shadow-sm">
                            <div class="product-image position-relative">
                                <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                                
                                <!-- Product Badges -->
                                @if (product.IsPopular)
                                {
                                    <span class="badge bg-warning position-absolute top-0 start-0 m-2">
                                        <i class="fas fa-star me-1"></i>Popüler
                                    </span>
                                }
                                @if (product.IsNew)
                                {
                                    <span class="badge bg-success position-absolute top-0 start-0 m-2">
                                        <i class="fas fa-sparkles me-1"></i>Yeni
                                    </span>
                                }
                                @if (product.OldPrice.HasValue && product.OldPrice > product.Price)
                                {
                                    <span class="badge bg-danger position-absolute top-0 end-0 m-2">
                                        <i class="fas fa-percent me-1"></i>İndirim
                                    </span>
                                }
                                
                                <!-- Quick View Overlay -->
                                <div class="product-overlay">
                                    <div class="overlay-content">
                                        <a href="@Url.Action("Detail", "Products", new { id = product.Id })" class="btn btn-light btn-sm mb-2">
                                            <i class="fas fa-eye me-1"></i>İncele
                                        </a>
                                        <button class="btn btn-primary btn-sm" onclick="addToCart(@product.Id)">
                                            <i class="fas fa-shopping-cart me-1"></i>Sepete Ekle
                                        </button>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="card-body d-flex flex-column">
                                <div class="mb-2">
                                    @if (product.Category != null)
                                    {
                                        <span class="badge bg-light text-dark">@product.Category.Name</span>
                                    }
                                </div>
                                
                                <h6 class="card-title fw-bold mb-2">@product.Name</h6>
                                <p class="card-text text-muted small mb-2">@product.Weight</p>
                                
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div>
                                        <span class="product-price">₺@product.Price.ToString("0.00")</span>
                                        @if (product.OldPrice.HasValue && product.OldPrice > product.Price)
                                        {
                                            <span class="product-old-price ms-2">₺@product.OldPrice?.ToString("0.00")</span>
                                        }
                                    </div>
                                    <span class="badge bg-primary">@product.FatContent</span>
                                </div>
                                
                                <div class="mt-auto">
                                    <div class="d-grid gap-2">
                                        <button class="btn btn-primary" onclick="addToCart(@product.Id)">
                                            <i class="fas fa-shopping-cart me-2"></i>Sepete Ekle
                                        </button>
                                        <a href="@Url.Action("Detail", "Products", new { id = product.Id })" class="btn btn-outline-primary">
                                            <i class="fas fa-info-circle me-2"></i>Detayları Gör
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
            
            <!-- Pagination -->
            @if (ViewBag.TotalPages > 1)
            {
                <div class="row mt-5">
                    <div class="col-12">
                        <nav aria-label="Ürün sayfaları">
                            <ul class="pagination justify-content-center">
                                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                {
                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Index", "Products", new { page = i, categoryId = ViewBag.SelectedCategoryId, sort = ViewBag.SortOrder })">@i</a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    </div>
                </div>
            }
        }
    </div>
</section>

<style>
    .page-header {
        position: relative;
        overflow: hidden;
    }
    
    .page-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="white" opacity="0.1"/><circle cx="75" cy="75" r="1" fill="white" opacity="0.1"/><circle cx="50" cy="10" r="0.5" fill="white" opacity="0.1"/><circle cx="10" cy="60" r="0.5" fill="white" opacity="0.1"/><circle cx="90" cy="40" r="0.5" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
        opacity: 0.3;
    }
    
    .search-form .input-group {
        border-radius: 50px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .search-form .form-control {
        border: none;
        padding: 15px 25px;
    }
    
    .search-form .btn {
        border-radius: 0 50px 50px 0;
        padding: 15px 30px;
    }
    
    .filter-section .btn-group {
        border-radius: 50px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .filter-section .btn {
        border: none;
        padding: 12px 24px;
    }
    
    .product-card {
        transition: all 0.3s ease;
        border-radius: 15px;
        overflow: hidden;
    }
    
    .product-card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0,0,0,0.15) !important;
    }
    
    .product-image {
        height: 250px;
        overflow: hidden;
        position: relative;
    }
    
    .product-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    
    .product-card:hover .product-image img {
        transform: scale(1.1);
    }
    
    .product-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    .product-card:hover .product-overlay {
        opacity: 1;
    }
    
    .overlay-content {
        text-align: center;
    }
    
    .product-price {
        font-size: 1.3rem;
        font-weight: 700;
        color: var(--primary-color);
    }
    
    .product-old-price {
        text-decoration: line-through;
        color: #999;
        font-size: 0.9rem;
    }
    
    .pagination .page-link {
        border: none;
        color: var(--primary-color);
        padding: 12px 16px;
        margin: 0 2px;
        border-radius: 8px;
        transition: all 0.3s ease;
    }
    
    .pagination .page-link:hover {
        background: var(--primary-color);
        color: white;
        transform: translateY(-2px);
    }
    
    .pagination .page-item.active .page-link {
        background: var(--primary-color);
        color: white;
    }
    
    @@media (max-width: 768px) {
        .filter-section .btn-group {
            flex-direction: column;
            border-radius: 15px;
        }
        
        .filter-section .btn {
            border-radius: 0 !important;
        }
        
        .filter-section .btn:first-child {
            border-top-left-radius: 15px !important;
            border-top-right-radius: 15px !important;
        }
        
        .filter-section .btn:last-child {
            border-bottom-left-radius: 15px !important;
            border-bottom-right-radius: 15px !important;
        }
    }
</style>

<script>
    function changeSort(value) {
        const urlParams = new URLSearchParams(window.location.search);
        urlParams.set('sort', value);
        window.location.href = window.location.pathname + '?' + urlParams.toString();
    }
    
    // Set current sort value
    document.addEventListener('DOMContentLoaded', function() {
        const urlParams = new URLSearchParams(window.location.search);
        const currentSort = urlParams.get('sort') || 'name';
        document.getElementById('sortSelect').value = currentSort;
    });
</script> 