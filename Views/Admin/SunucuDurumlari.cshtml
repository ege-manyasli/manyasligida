@{
    ViewData["Title"] = "Sunucu Durumları";

    var servers = new[]
    {
        new { Id = 1, Title = "Arkel Cloud LB-1", ViewBagName = "ServerStatusesArkelCloudLB1" },
        new { Id = 2, Title = "Arkel Cloud LB-2", ViewBagName = "ServerStatusesArkelCloudLB2" },
        new { Id = 3, Title = "Arkel Cloud Proxy-1", ViewBagName = "ServerStatusesArkelCloudProxy1" },
        new { Id = 4, Title = "Arkel Cloud Proxy-2", ViewBagName = "ServerStatusesArkelCloudProxy2" },
        new { Id = 5, Title = "Arkel Web Server", ViewBagName = "ServerStatusesArkelWebServer" },
        new { Id = 6, Title = "AX AOS Server", ViewBagName = "ServerStatusesAXAOSServer" },
        new { Id = 7, Title = "AX SQL Server", ViewBagName = "ServerStatusesAXSQLServer" },
        new { Id = 8, Title = "PBX Server", ViewBagName = "ServerStatusesPBXServer" },
        new { Id = 9, Title = "EXC Server", ViewBagName = "ServerStatusesEXCServer" }
    };
}

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">

<style>
    body {
        font-family: 'Inter', Arial, sans-serif;
        background: linear-gradient(120deg, #f8fafc 0%, #e9ecef 100%);
        min-height: 100vh;
    }

    .header-container {
        width: 100vw;
        text-align: center;
        padding: 48px 0 32px 0;
        background: #fff; /* Düz beyaz arka plan */
        color: #3BA55C;
        border-radius: 0 0 18px 18px;
        margin-bottom: 32px;
        box-shadow: 0 4px 16px rgba(59,165,92,0.08);
    }

    #brandingLogo {
        display: none;
    }

    .container {
        width: 100vw;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 32px;
    }

    .card {
        width: 100%;
        max-width: 900px;
        margin: 0 auto 24px auto;
        box-shadow: 0 4px 16px rgba(59,165,92,0.08);
        border-radius: 14px;
        border: none;
        transition: box-shadow 0.2s;
        padding: 0;
    }

    .card.bg-success {
        background: linear-gradient(90deg, #3BA55C 0%, #6edc8c 100%);
        color: #fff;
    }

    .card.bg-danger {
        background: linear-gradient(90deg, #ff0000 0%, #ff7a7a 100%);
        color: #fff;
    }

    .card-body {
        font-weight: 600;
        font-size: 1.2rem;
        letter-spacing: 0.5px;
        padding: 24px 32px;
    }

    .chart-info-container {
        width: 100%;
        max-width: 900px;
        margin: 24px auto;
        border: 1px solid #e0e0e0;
        border-radius: 12px;
        padding: 24px 32px 16px 32px;
        background: #fff;
        box-shadow: 0 2px 8px rgba(59,165,92,0.04);
        transition: box-shadow 0.2s;
    }

    .chart-info-container:hover {
        box-shadow: 0 6px 24px rgba(59,165,92,0.10);
        border-color: #3BA55C;
    }

    .chart-container, #chartDiv {
        width: 100%;
        max-width: 900px;
        height: 50px;
        margin: 0 auto;
        padding: 10px 0;
    }

    .uptime-info {
        display: flex;
        align-items: center;
        justify-content: space-between;
        font-size: 15px;
        color: #7a7a7a;
        margin-top: 18px;
        font-weight: 500;
        letter-spacing: 0.2px;
        gap: 16px;
    }

    .uptime-label {
        min-width: 90px;
        text-align: center;
        color: #3BA55C;
        font-weight: 600;
        font-size: 1rem;
    }

    .uptime-bar-wrap {
        flex: 1;
        display: flex;
        align-items: center;
        position: relative;
        min-width: 120px;
        max-width: 400px;
        margin: 0 10px;
    }

    .uptime-bar-bg {
        width: 100%;
        height: 10px;
        background: linear-gradient(90deg, #e0e0e0 0%, #b3bac5 100%);
        border-radius: 6px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 1px 6px rgba(59,165,92,0.07);
    }

    .uptime-bar-fg {
        height: 100%;
        background: linear-gradient(90deg, #3BA55C 0%, #6edc8c 100%);
        border-radius: 6px 0 0 6px;
        transition: width 0.7s cubic-bezier(.4,2,.6,1);
        width: 0; /* JS ile doldurulacak */
    }

    .uptime-percentage {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        font-size: 0.92rem;
        font-weight: 600;
        color: #3BA55C;
        background: #fff;
        padding: 1px 8px;
        border-radius: 6px;
        box-shadow: 0 1px 4px rgba(59,165,92,0.07);
        pointer-events: none;
        border: 1px solid #3BA55C;
        z-index: 2;
        letter-spacing: 0.2px;
        opacity: 0.93;
        min-width: 60px;
        text-align: center;
    }

    @@media (max-width: 1100px) {
        .header-container, .container, .card, .chart-info-container, .chart-container, #chartDiv
    {
        max-width: 98vw;
        width: 98vw;
        padding-left: 0;
        padding-right: 0;
    }
    .card-body, .chart-info-container {
        padding-left: 10px;
        padding-right: 10px;
    }
    .uptime-bar-wrap {
        min-width: 60px;
        max-width: 100vw;
    }
    .uptime-label {
        min-width: 60px;
        font-size: 0.95rem;
    }
    }
</style>

<div class="header-container">
    <h1 style="font-size:2.2rem; font-weight:700; margin-bottom:0;">Sunucu Durumları</h1>
    <div style="font-size:1.1rem; font-weight:400; opacity:0.85;">Sunucuların son 90 günlük çalışma durumu</div>
</div>

<div class="container">
    <div class="card bg-success border-success text-white-50 mb-3">
        <div class="card-body text-white">
            Tüm Sistemler Çalışıyor.
        </div>
    </div>
</div>

@foreach (var server in servers)
{
    <div class="chart-info-container">
        <div id="chartDiv_@server.Id"></div>
        <div class="uptime-info">
            <span class="uptime-label">90 days ago</span>
            <div class="uptime-bar-wrap">
                <div class="uptime-bar-bg">
                    <div class="uptime-bar-fg" id="uptimeBar_@server.Id"></div>
                </div>
                <span id="uptimePercentage_@server.Id" class="uptime-percentage"></span>
            </div>
            <span class="uptime-label">Today</span>
        </div>
    </div>
}

<script src="~/dist/js/jscharting.js"></script>
<script src="~/dist/js/modules/types.js"></script>

<script>
    var statuses = ['UP', 'DOWN', 'NO DATA'];
    var palette = ['#3BA55C', '#ff0000', '#b3bac5'];
    var statuses1 = ['No interruptions were recorded on this day.', 'Some servers are down!', 'There is no data for today.'];

    // makeSeries fonksiyonunda downtime ve uptime ekle
    function makeSeries(data) {
        return [
            {
                points: data.map(function (item) {
                    // item.status: 0=UP, 1=DOWN, 2=NO DATA
                    return {
                        x: new Date(item.date),
                        y: 'System',
                        z: item.status,
                        attributes_status: statuses1[item.status] + ' - %' + item.uptime,
                        attributes_downtime: item.downtime || '',
                        attributes_uptime: item.uptime || ''
                    };
                })
            }
        ];
    }

    var servers = [
        {
            id: 1,
            title: "Arkel Cloud LB-1",
            data: @Html.Raw(ViewBag.ServerStatusesArkelCloudLB1),
            lastStatus: @ViewData["ServerStatusesArkelCloudLB1_LastStatus"]
        },
        {
            id: 2,
            title: "Arkel Cloud LB-2",
            data: @Html.Raw(ViewBag.ServerStatusesArkelCloudLB2),
            lastStatus: @ViewData["ServerStatusesArkelCloudLB2_LastStatus"]
        },
        {
            id: 3,
            title: "Arkel Cloud Proxy-1",
            data: @Html.Raw(ViewBag.ServerStatusesArkelCloudProxy1),
            lastStatus: @ViewData["ServerStatusesArkelCloudProxy1_LastStatus"]
        },
        {
            id: 4,
            title: "Arkel Cloud Proxy-2",
            data: @Html.Raw(ViewBag.ServerStatusesArkelCloudProxy2),
            lastStatus: @ViewData["ServerStatusesArkelCloudProxy2_LastStatus"]
        },
        {
            id: 5,
            title: "Arkel Web Server",
            data: @Html.Raw(ViewBag.ServerStatusesArkelWebServer),
            lastStatus: @ViewData["ServerStatusesArkelWebServer_LastStatus"]
        },
        {
            id: 6,
            title: "AX AOS Server",
            data: @Html.Raw(ViewBag.ServerStatusesAXAOSServer),
            lastStatus: @ViewData["ServerStatusesAXAOSServer_LastStatus"]
        },
        {
            id: 7,
            title: "AX SQL Server",
            data: @Html.Raw(ViewBag.ServerStatusesAXSQLServer),
            lastStatus: @ViewData["ServerStatusesAXSQLServer_LastStatus"]
        },
        {
            id: 8,
            title: "PBX Server",
            data: @Html.Raw(ViewBag.ServerStatusesPBXServer),
            lastStatus: @ViewData["ServerStatusesPBXServer_LastStatus"]
        },
        {
            id: 9,
            title: "EXC Server",
            data: @Html.Raw(ViewBag.ServerStatusesEXCServer),
            lastStatus: @ViewData["ServerStatusesEXCServer_LastStatus"]
        }
    ];

    servers.forEach(function (server) {
        renderChart(
            'chartDiv_' + server.id,
            'uptimePercentage_' + server.id,
            makeSeries(server.data.slice(-90)),
            server.title
        );
    });

    var allServersUp = servers.every(function (server) {
        return server.lastStatus === 0;
    });

    updateStatusCard(allServersUp ? 0 : 1);

    function updateStatusCard(status) {
        var statusCard = document.querySelector('.card');
        var statusMessage = status === 0 ? "All Servers Up." : "Some Servers Down!";
        var cardBody = statusCard.querySelector('.card-body');
        if (status === 0) {
            statusCard.classList.remove('bg-danger', 'border-danger');
            statusCard.classList.add('bg-success', 'border-success');
        } else {
            statusCard.classList.remove('bg-success', 'border-success');
            statusCard.classList.add('bg-danger', 'border-danger');
        }
        cardBody.innerHTML = statusMessage;
    }

    function renderChart(chartId, uptimeId, series, title) {
        JSC.chart(chartId, {
            type: 'heatmap solid',
            height: 75,
            title_label_text: title,
            title_label_style: {
                fontWeight: '600',
                color: 'black'
            },
            debug: false,
            legend: {
                margin_top: -26,
                position: 'inside top right',
                defaultEntry: { icon_width: 10 }
            },
            palette: {
                pointValue: function (p) {
                    return p.options('z');
                },
                ranges: makePaletteRanges(palette)
            },
            yAxis_visible: false,
            xAxis: {
                scale_type: 'time',
                visible: false
            },
            defaultSeries_shape_innerPadding: 0.15,
            defaultPoint: {
                outline_width: 0,
                // Tooltip güncellendi:
                tooltip: function(point) {
                    var date = point.tokenValue('%xValue:date');
                    var status = statuses[point.options('z')];
                    var downtime = point.options('attributes_downtime');
                    var uptime = point.options('attributes_uptime');
                    if (point.options('z') === 1) {
                        // DOWN
                        return date + '<br><b>DOWN</b><br>Kesinti süresi: ' + (downtime ? downtime : '-') + '';
                    } else if (point.options('z') === 0) {
                        // UP
                        return date + '<br><b>UP</b><br>Çalışma süresi: ' + (uptime ? uptime : '-') + '';
                    } else {
                        // NO DATA
                        return date + '<br><b>NO DATA</b>';
                    }
                }
            },
            series: series,
            logo_visible: false
        });

        var lastUptimePercentage = series[0].points[series[0].points.length - 1].attributes_status.split('%')[1];
        var formattedUptime = parseFloat(lastUptimePercentage).toFixed(2);
        var uptimeSpan = document.getElementById(uptimeId);
        uptimeSpan.innerHTML = formattedUptime + "% uptime";
        var barFg = document.getElementById('uptimeBar_' + chartId.split('_')[1]);
        if (barFg) {
            barFg.style.width = formattedUptime + "%";
        }
    }

    function makePaletteRanges(palette) {
        return palette.map(function (item, i) {
            return {
                value: i,
                color: item,
                legendEntry_value: statuses[i]
            };
        });
    }
</script> 