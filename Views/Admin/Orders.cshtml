@model IEnumerable<manyasligida.Models.Order>
@{
    ViewData["Title"] = "Sipariş Yönetimi";
    Layout = "_AdminLayout";
}

<div class="page-header">
    <div class="d-flex justify-content-between align-items-center">
        <div>
            <h1 class="page-title">Sipariş Yönetimi</h1>
            <p class="page-subtitle">Tüm siparişleri görüntüleyin ve yönetin</p>
        </div>
        <div class="d-flex gap-2">
            <select class="form-select" id="statusFilter" style="width: auto;">
                <option value="">Tüm Durumlar</option>
                <option value="Pending">Beklemede</option>
                <option value="Confirmed">Onaylandı</option>
                <option value="Shipped">Kargoda</option>
                <option value="Delivered">Teslim Edildi</option>
                <option value="Cancelled">İptal Edildi</option>
            </select>
            <button class="btn btn-outline-primary" onclick="exportOrders()">
                <i class="fas fa-download me-2"></i>Dışa Aktar
            </button>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="mb-0"><i class="fas fa-shopping-cart me-2"></i>Siparişler</h5>
    </div>
    <div class="card-body">
        @if (Model != null && Model.Count() > 0)
        {
            <div class="table-responsive">
                <table class="table table-hover" id="ordersTable">
                    <thead>
                        <tr>
                            <th>Sipariş No</th>
                            <th>Müşteri</th>
                            <th>Tarih</th>
                            <th>Tutar</th>
                            <th>Durum</th>
                            <th>Ödeme</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in Model)
                        {
                            <tr data-status="@order.OrderStatus">
                                <td>
                                    <strong>#@order.Id</strong>
                                </td>
                                <td>
                                    <div>
                                        <strong>@order.User?.FirstName @order.User?.LastName</strong>
                                        <br>
                                        <small class="text-muted">@order.User?.Email</small>
                                        <br>
                                        <small class="text-muted">@order.User?.Phone</small>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <strong>@order.OrderDate.ToString("dd.MM.yyyy")</strong>
                                        <br>
                                        <small class="text-muted">@order.OrderDate.ToString("HH:mm")</small>
                                    </div>
                                </td>
                                <td>
                                    <strong class="text-primary">₺@order.TotalAmount.ToString("0.00")</strong>
                                </td>
                                <td>
                                    @{
                                        var statusClass = order.OrderStatus switch
                                        {
                                            "Pending" => "bg-warning",
                                            "Confirmed" => "bg-info",
                                            "Shipped" => "bg-primary",
                                            "Delivered" => "bg-success",
                                            "Cancelled" => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                        var statusText = order.OrderStatus switch
                                        {
                                            "Pending" => "Beklemede",
                                            "Confirmed" => "Onaylandı",
                                            "Shipped" => "Kargoda",
                                            "Delivered" => "Teslim Edildi",
                                            "Cancelled" => "İptal Edildi",
                                            _ => order.OrderStatus
                                        };
                                    }
                                    <span class="badge @statusClass">@statusText</span>
                                </td>
                                <td>
                                    @{
                                        var paymentClass = order.PaymentStatus switch
                                        {
                                            "Pending" => "bg-warning",
                                            "Paid" => "bg-success",
                                            "Failed" => "bg-danger",
                                            _ => "bg-secondary"
                                        };
                                        var paymentText = order.PaymentStatus switch
                                        {
                                            "Pending" => "Beklemede",
                                            "Paid" => "Ödendi",
                                            "Failed" => "Başarısız",
                                            _ => order.PaymentStatus
                                        };
                                    }
                                    <span class="badge @paymentClass">@paymentText</span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("OrderDetail", "Admin", new { id = order.Id })" class="btn btn-sm btn-outline-info" title="Detay">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="updateOrderStatus(@order.Id, '@order.OrderStatus')" title="Durum Güncelle">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        @if (order.OrderStatus != "Delivered" && order.OrderStatus != "Cancelled")
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="cancelOrder(@order.Id)" title="İptal Et">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">Henüz sipariş bulunmuyor</h5>
                <p class="text-muted">Müşteriler sipariş verdiğinde burada görünecek.</p>
            </div>
        }
    </div>
</div>

<!-- Update Order Status Modal -->
<div class="modal fade" id="updateStatusModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sipariş Durumu Güncelle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form asp-action="UpdateOrderStatus" method="post">
                <input type="hidden" id="orderId" name="orderId">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="orderStatus" class="form-label">Sipariş Durumu</label>
                        <select class="form-select" id="orderStatus" name="status" required>
                            <option value="Pending">Beklemede</option>
                            <option value="Confirmed">Onaylandı</option>
                            <option value="Shipped">Kargoda</option>
                            <option value="Delivered">Teslim Edildi</option>
                            <option value="Cancelled">İptal Edildi</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="submit" class="btn btn-primary">Güncelle</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Status filter functionality
        document.getElementById('statusFilter').addEventListener('change', function() {
            const selectedStatus = this.value;
            const rows = document.querySelectorAll('#ordersTable tbody tr');
            
            rows.forEach(row => {
                const status = row.getAttribute('data-status');
                if (selectedStatus === '' || status === selectedStatus) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });

        function updateOrderStatus(orderId, currentStatus) {
            document.getElementById('orderId').value = orderId;
            document.getElementById('orderStatus').value = currentStatus;
            new bootstrap.Modal(document.getElementById('updateStatusModal')).show();
        }

        function cancelOrder(orderId) {
            if (confirm('Bu siparişi iptal etmek istediğinizden emin misiniz?')) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("UpdateOrderStatus", "Admin")';
                
                const orderIdInput = document.createElement('input');
                orderIdInput.type = 'hidden';
                orderIdInput.name = 'orderId';
                orderIdInput.value = orderId;
                
                const statusInput = document.createElement('input');
                statusInput.type = 'hidden';
                statusInput.name = 'status';
                statusInput.value = 'Cancelled';
                
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                
                form.appendChild(orderIdInput);
                form.appendChild(statusInput);
                form.appendChild(tokenInput);
                
                document.body.appendChild(form);
                form.submit();
            }
        }

        function exportOrders() {
            // CSV export functionality
            const table = document.getElementById('ordersTable');
            const rows = Array.from(table.querySelectorAll('tr'));
            
            let csv = 'Sipariş No,Müşteri,Tarih,Tutar,Durum,Ödeme\n';
            
            rows.slice(1).forEach(row => {
                const cells = Array.from(row.querySelectorAll('td'));
                const rowData = cells.map(cell => {
                    let text = cell.textContent.trim();
                    // Remove HTML tags and clean up
                    text = text.replace(/<[^>]*>/g, '');
                    text = text.replace(/\n/g, ' ');
                    text = text.replace(/,/g, ';');
                    return `"${text}"`;
                });
                csv += rowData.join(',') + '\n';
            });
            
            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', `siparisler_${new Date().toISOString().split('T')[0]}.csv`);
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    </script>
} 